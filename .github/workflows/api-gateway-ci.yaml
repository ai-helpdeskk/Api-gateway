name: API Gateway CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/bedrock-chat-api-gateway

jobs:
  ci-pipeline:
    name: CI Pipeline
    runs-on: [self-hosted]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python and install dependencies
        run: |
          python3 -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 bandit safety pytest

      - name: Run Linting
        continue-on-error: true
        run: |
          source venv/bin/activate
          flake8 .

      - name: Run Security Scans
        continue-on-error: true
        run: |
          source venv/bin/activate
          bandit -r .
          safety check

      - name: Run Unit Tests
        continue-on-error: true
        run: |
          source venv/bin/activate
          mkdir -p tests
          if [ ! -f tests/test_main.py ]; then
          echo 'import pytest
from fastapi.testclient import TestClient
import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
from main import app
client = TestClient(app)
def test_root():
    response = client.get("/")
    assert response.status_code == 200
    assert "API Gateway is running" in response.json()["message"]
' > tests/test_main.py
          fi
          pytest tests/

  build:
    name: Build and Push Docker Image
    needs: ci-pipeline
    runs-on: [self-hosted]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ env.IMAGE_NAME }}:latest
